#!/bin/sh
# postinst script for squid-deb-proxy
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# A simplified version of debconf's own config script.
. /usr/share/debconf/confmodule

USER_NETWORKS=/etc/squid-deb-proxy/allowed-networks-src.acl.d/10-default
USER_ALLOWED_DESTINATIONS=/etc/squid-deb-proxy/mirror-dstdomain.acl.d/10-default

DEBCONF_NETWORKS=/etc/squid-deb-proxy/allowed-networks-src.acl.d/30-debconf
DEBCONF_ALLOWED_DESTINATIONS=/etc/squid-deb-proxy/mirror-dstdomain.acl.d/30-debconf

case "$1" in
    configure)

        # the users allowed networks, this is not a conffile so its created
        # here
        if [ ! -f "$USER_NETWORKS" ]; then
            cat > "$USER_NETWORKS" <<EOF
# $USER_NETWORKS
# 
# additional network sources that you want to allow access to the cache

# example net
#136.199.8.0/24
EOF
        fi

        # the users allowed destinations, this is not a conffile 
        if [ ! -f "$USER_ALLOWED_DESTINATIONS" ]; then
            cat > "$USER_ALLOWED_DESTINATIONS" <<EOF
# $USER_ALLOWED_DESTINATIONS
# 
# network destinations that are allowed by this cache

# launchpad personal package archives (disabled by default)
#ppa.launchpad.net
#private-ppa.launchpad.net

# add additional mirror domains here (disabled by default)
#linux.dropbox.com
#download.virtualbox.org
#archive.getdeb.net
#packages.medibuntu.org
#dl.google.com
#repo.steampowered.com
EOF
        fi

        # pkg blacklist, not a conffile
        PKG_BLACKLIST_IN=/etc/squid-deb-proxy/pkg-blacklist.d/10-default
        cat > $PKG_BLACKLIST_IN <<EOF
# $PKG_BLACKLIST_IN
#
# packages that should be not allowed for download, one binary packagename
# per line
#
#skype
EOF

        # get the debconf answers
        db_get squid-deb-proxy/ppa-enable
        case "$RET" in
            false)
                rm -f "$DEBCONF_ALLOWED_DESTINATIONS"
                ;;
            true)
                cat > "$DEBCONF_ALLOWED_DESTINATIONS" <<EOF
# automatically added by debconf, please use: 
#   sudo dpkg-reconfigure -plow squid-deb-proxy
# to change
ppa.launchpad.net
EOF
                ;;
            *)
                echo "db_get returned unexpected result: '$RET' for squid-deb-proxy/ppa-enable"
                exit 1
                ;;
        esac
        
        db_get squid-deb-proxy/acl-disable
        case "$RET" in
            false)
                rm -f "$DEBCONF_NETWORKS"
                ;;
            true)
                cat > "$DEBCONF_NETWORKS" <<EOF
# automatically added by debconf, please use: 
#   sudo dpkg-reconfigure -plow squid-deb-proxy
# to change
0.0.0.0/0.0.0.0
EOF
                ;;
            *)
                echo "db_get returned unexpected result: '$RET' for squid-deb-proxy/acl-disable"
                exit 1
                ;;
        esac
        # workaround for bugginess
        db_stop

        # reload to be on the safe side
        invoke-rc.d squid-deb-proxy reload || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure|triggered)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
